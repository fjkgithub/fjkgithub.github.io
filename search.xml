<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[linux常用命令]]></title>
    <url>%2F2019%2F09%2F16%2Flinux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[tail-f fileName命令用于查看文件内容最后10行数据，ctrl+c退出。 最基本的是cat、more和less。看的是文件全部内容，内容很多的话，不方便。 tail -f [ -n Number ] [ File ] 查看最新的，会刷新，可以用ctrl+c 来终止 例如：tail -f -n 10 fileName 查看最后10行最新消息。（默认是10行）chmod授权方式。chown -R更改文件夹的用户 tmp 目录为所有用户可读可写权限：chmod -R 777 /tmp 修改 tmp 目录所属用户为 root，用户组为 root ： chown -R root:root /tmp详细查看某个java项目有没有起、以及项目的进程PID(1)ps -ef |grep 项目名 (2)jps -l --&gt;查看所有java的进程查看linux的各个磁盘的使用率和所占空间df -h查看当前目录及子目录的大小du -h查看当前目录的一级目录的大小du -ah --max-depth=1查看所有文件的详情ll -h cd ~查看某个目录cd .. 查看上一层目录 cd -回到上次的目录查找文件find /home/ad -name iad* 查看/home/ad目录下前缀为iad的所有文件 find /home/ad -inname iad* 查看/home/ad目录下前缀为iad的所有文件（忽略大小写） find /home/ad -size +20M 查看/home/ad目录下大于20M的所有文件压缩和解压(1)zip 文件 ①zip 文件名.zip 源文件 ---》压缩文件 ②zip 目录名.zip 源目录 ----》压缩目录 ③unzip 压缩文件名.zip ---》解压文件 ④unzip -r 压缩目录名.zip ---》解压目录 (2)tar 文件 ①tar -cvf 压缩文件名.tar 源文件 ---》压缩文件 ②tar -xvf 压缩文件名.tar ---》解压文件 (3)tag.gz 文件 ①tar -zcvf 压缩文件名.tar.gz 源文件 ---》压缩文件 ②tar -zxvf 压缩文件名.tar.gz ---》解压文件 (4)gz ①gzip 文件名.gz 源文件 ---》压缩文件 ②gzip -r 目录名.gz 源目录 ----》压缩目录 ③guzip 文件名.gz ----》解压文件 ④guzip -r 目录名.gz ---》解压目录 查看输入命令的历史记录history输出重定向(1)shell命令 &gt;&gt; 文件名.log 2&gt;&amp;1 同时追加正确命令和错误命令到 指定文件 (2)shell命令 &gt;&gt;文件.log 1 2&gt;&gt;文件.log 2 把正确的命令输出到文件1错误的文件2查看路由表route -n将本机文件复制到远程服务器上scp 文件的绝对路径 root@远程ip:远程具体目录 Lg: scp /home/ad/log.txt root@192.168.1.110:/home/log常用快捷键ctrl+c 终止当前命令 ctrl+l 清屏 相当于clear]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[idea快捷键]]></title>
    <url>%2F2019%2F09%2F16%2Fidea%E5%BF%AB%E6%8D%B7%E9%94%AE%2F</url>
    <content type="text"><![CDATA[常用快捷键 快捷键 提示 alt+insert 生成代码(如get,set方法,构造函数等) alt+enter 导入包 alt+F7 查看某个方法在哪里有用到,或者按ctrl+鼠标点击 ctrl+e 最近更改的代码 ctrl+r 替换文本 ctrl+f 查找文本 ctrl+空格 代码提示 ctrl+p 方法参数提示 ctrl+shit+space 自动提示 ctrl+shit+enter 自动补全 ctrl+x 删除行 ctrl+d 复制行 ctrl＋F12 可以显示当前文件的结构 ctrl+alt+ left/right 返回至上次浏览的位置 ctrl＋alt＋t 可以把代码包在一块内，例如try/catch if ctrl+alt+l 格式化代码 ctrl+alt+o 去掉没有用的import包 ctrl+alt+t 快速生成if else try catch ctrl+h 查询类的父类和子类的层级关系 ctrl+alt+b 查看子类方法实现 ctrl+/ 或 ctrl+chift+/ 注释（// 或者/…/ ） shift+shift 搜索任何東西 shift+F6 重构 – 重命名 ctrl+n 查找哪个类 ctrl+shift+n 查找哪个文件]]></content>
      <categories>
        <category>idea</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown使用手册]]></title>
    <url>%2F2019%2F08%2F27%2FMarkDown%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C%2F</url>
    <content type="text"><![CDATA[标题123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 换行1&lt;/br&gt; 分割线1*** 文字样式1234567891011*斜体***加粗**==高亮==~~划线~~&lt;font color=#2196F3 size=2 face=&quot;宋体&quot;&gt;宋体大小为2蓝色的字&lt;/font&gt;&lt;center&gt;居中&lt;/center&gt; 斜体加粗==高亮==划线宋体大小为2蓝色的字 居中 列表123- 列表1 - 列表1.1 - 列表1.2 列表1 列表1.1 列表1.2 链接以及图片123[少数派](https://sspai.com/)![logo](https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=2634294714,2265844648&amp;fm=58&amp;s=4EE6885691B0CD92947DB9F002005035&amp;bpow=121&amp;bpoh=75) 少数派 表格1234大标题1|大标题2|大标题3--|--|--内容1|内容2|内容3内容1|内容2|内容3 大标题1 大标题2 大标题3 内容1 内容2 内容3 内容1 内容2 内容3 插入图片 大小设置12方案一：默认大小 ![](/images/Desert.jpg) 方案二：设置大小 &lt;img width=400 src=&quot;/images/Desert.jpg&quot; &gt;]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jsonUtils]]></title>
    <url>%2F2019%2F08%2F27%2FjsonUtils%2F</url>
    <content type="text"><![CDATA[jsonUtil工具类1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798package com.zzcm.shortvideospider.util;import com.fasterxml.jackson.core.JsonParseException;import com.fasterxml.jackson.core.JsonProcessingException;import com.fasterxml.jackson.core.type.TypeReference;import com.fasterxml.jackson.databind.DeserializationFeature;import com.fasterxml.jackson.databind.ObjectMapper;import org.apache.commons.lang3.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.text.SimpleDateFormat;import java.util.Map;public class JsonUtil &#123; private static final Logger logger = LoggerFactory.getLogger(JsonUtil.class); private static final ObjectMapper mapper = new ObjectMapper(); public static ObjectMapper getMapper() &#123; return mapper; &#125; public static String toJson(Object object) &#123; String json = null; try &#123; json = mapper.writeValueAsString(object); &#125; catch (JsonProcessingException var3) &#123; logger.warn(var3.getMessage(), var3); &#125; return json; &#125; /** * 功能描述: fromJson(Stinrg,List.class,Map.class) * @Author: fjk * @Date: 2019/8/27 14:00 */ public static &lt;T&gt; T fromJson(String json, Class&lt;?&gt; collectionClass, Class... elementClasses) &#123; Object t = null; try &#123; t = mapper.readValue(json, mapper.getTypeFactory().constructParametricType(collectionClass, elementClasses)); &#125; catch (Exception var5) &#123; logger.warn(var5.getMessage(), var5); &#125; return (T) t; &#125; public static &lt;T&gt; T object(String json, Class&lt;T&gt; clazz) &#123; if(StringUtils.isEmpty(json)) &#123; return null; &#125; try &#123; return mapper.readValue(json, clazz); &#125; catch (JsonParseException var3) &#123; logger.error("JsonParseException", var3); &#125; catch (RuntimeException var4) &#123; logger.error("Runtime exception " + StringUtils.abbreviate(json, 80), var4); &#125; catch (Exception var5) &#123; logger.error("Exception " + StringUtils.abbreviate(json, 80), var5); &#125; return null; &#125; public static &lt;T&gt; T object(String json, TypeReference typeReference) &#123; Object t = null; try &#123; t = mapper.readValue(json, typeReference); &#125; catch (Exception var4) &#123; logger.warn(var4.getMessage(), var4); &#125; return (T) t; &#125; public static Map&lt;String, ?&gt; getMapFromJson(String json) &#123; Map map = null; try &#123; map = (Map)mapper.readValue(json, Map.class); &#125; catch (Exception var3) &#123; logger.warn(var3.getMessage(), var3); &#125; return map; &#125; static &#123; mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false); mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")); &#125;&#125; bean转json字符串1String str = JsonUtil.toJson(Bean); json字符串转一层bean1Bean bean = JsonUtil.object(String,Bean.class); json字符串转多层嵌套bean1Bean bean = JsonUtil.object(String,new TypeReference(Bean)&#123;&#125;); json字符串转Map1Map&lt;Sintrg,Objext&gt; map = JsonUtil.getMapFromJson(Bean); json字符串转List&lt;Map&lt;Sintrg,Objext&gt;&gt;1List&lt;Map&lt;Sintrg,Objext&gt;&gt; listMap = fromJson(Stinrg,List.class,Map.class);]]></content>
      <categories>
        <category>json</category>
      </categories>
      <tags>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo bulid]]></title>
    <url>%2F2019%2F08%2F26%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: baiduMore info: Deployment]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo rule</tag>
      </tags>
  </entry>
</search>
