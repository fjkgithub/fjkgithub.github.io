<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[idea快捷键]]></title>
    <url>%2F2019%2F09%2F16%2Fidea%E5%BF%AB%E6%8D%B7%E9%94%AE%2F</url>
    <content type="text"><![CDATA[常用快捷键 快捷键 提示 alt+insert 生成代码(如get,set方法,构造函数等) alt+enter 导入包 alt+F7 查看某个方法在哪里有用到,或者按ctrl+鼠标点击 ctrl+e 最近更改的代码 ctrl+r 替换文本 ctrl+f 查找文本 ctrl+空格 代码提示 ctrl+p 方法参数提示 ctrl+shit+space 自动提示 ctrl+shit+enter 自动补全 ctrl+x 删除行 ctrl+d 复制行 ctrl＋F12 可以显示当前文件的结构 ctrl+alt+ left/right 返回至上次浏览的位置 ctrl＋alt＋t 可以把代码包在一块内，例如try/catch if ctrl+alt+l 格式化代码 ctrl+alt+o 去掉没有用的import包 ctrl+alt+t 快速生成if else try catch ctrl+h 查询类的父类和子类的层级关系 ctrl+alt+b 查看子类方法实现 ctrl+/ 或 ctrl+chift+/ 注释（// 或者/…/ ） shift+shift 搜索任何東西 shift+F6 重构 – 重命名 ctrl+n 查找哪个类 ctrl+shift+n 查找哪个文件]]></content>
      <categories>
        <category>idea</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown使用手册]]></title>
    <url>%2F2019%2F08%2F27%2FMarkDown%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C%2F</url>
    <content type="text"><![CDATA[标题123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 换行1&lt;/br&gt; 分割线1*** 文字样式1234567891011*斜体***加粗**==高亮==~~划线~~&lt;font color=#2196F3 size=2 face=&quot;宋体&quot;&gt;宋体大小为2蓝色的字&lt;/font&gt;&lt;center&gt;居中&lt;/center&gt; 斜体加粗==高亮==划线宋体大小为2蓝色的字 居中 列表123- 列表1 - 列表1.1 - 列表1.2 列表1 列表1.1 列表1.2 链接以及图片123[少数派](https://sspai.com/)![logo](https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=2634294714,2265844648&amp;fm=58&amp;s=4EE6885691B0CD92947DB9F002005035&amp;bpow=121&amp;bpoh=75) 少数派 表格1234大标题1|大标题2|大标题3--|--|--内容1|内容2|内容3内容1|内容2|内容3 大标题1 大标题2 大标题3 内容1 内容2 内容3 内容1 内容2 内容3 插入图片 大小设置12方案一：默认大小 ![](/images/Desert.jpg) 方案二：设置大小 &lt;img width=400 src=&quot;/images/Desert.jpg&quot; &gt;]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jsonUtils]]></title>
    <url>%2F2019%2F08%2F27%2FjsonUtils%2F</url>
    <content type="text"><![CDATA[jsonUtil工具类1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798package com.zzcm.shortvideospider.util;import com.fasterxml.jackson.core.JsonParseException;import com.fasterxml.jackson.core.JsonProcessingException;import com.fasterxml.jackson.core.type.TypeReference;import com.fasterxml.jackson.databind.DeserializationFeature;import com.fasterxml.jackson.databind.ObjectMapper;import org.apache.commons.lang3.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.text.SimpleDateFormat;import java.util.Map;public class JsonUtil &#123; private static final Logger logger = LoggerFactory.getLogger(JsonUtil.class); private static final ObjectMapper mapper = new ObjectMapper(); public static ObjectMapper getMapper() &#123; return mapper; &#125; public static String toJson(Object object) &#123; String json = null; try &#123; json = mapper.writeValueAsString(object); &#125; catch (JsonProcessingException var3) &#123; logger.warn(var3.getMessage(), var3); &#125; return json; &#125; /** * 功能描述: fromJson(Stinrg,List.class,Map.class) * @Author: fjk * @Date: 2019/8/27 14:00 */ public static &lt;T&gt; T fromJson(String json, Class&lt;?&gt; collectionClass, Class... elementClasses) &#123; Object t = null; try &#123; t = mapper.readValue(json, mapper.getTypeFactory().constructParametricType(collectionClass, elementClasses)); &#125; catch (Exception var5) &#123; logger.warn(var5.getMessage(), var5); &#125; return (T) t; &#125; public static &lt;T&gt; T object(String json, Class&lt;T&gt; clazz) &#123; if(StringUtils.isEmpty(json)) &#123; return null; &#125; try &#123; return mapper.readValue(json, clazz); &#125; catch (JsonParseException var3) &#123; logger.error("JsonParseException", var3); &#125; catch (RuntimeException var4) &#123; logger.error("Runtime exception " + StringUtils.abbreviate(json, 80), var4); &#125; catch (Exception var5) &#123; logger.error("Exception " + StringUtils.abbreviate(json, 80), var5); &#125; return null; &#125; public static &lt;T&gt; T object(String json, TypeReference typeReference) &#123; Object t = null; try &#123; t = mapper.readValue(json, typeReference); &#125; catch (Exception var4) &#123; logger.warn(var4.getMessage(), var4); &#125; return (T) t; &#125; public static Map&lt;String, ?&gt; getMapFromJson(String json) &#123; Map map = null; try &#123; map = (Map)mapper.readValue(json, Map.class); &#125; catch (Exception var3) &#123; logger.warn(var3.getMessage(), var3); &#125; return map; &#125; static &#123; mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false); mapper.setDateFormat(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")); &#125;&#125; bean转json字符串1String str = JsonUtil.toJson(Bean); json字符串转一层bean1Bean bean = JsonUtil.object(String,Bean.class); json字符串转多层嵌套bean1Bean bean = JsonUtil.object(String,new TypeReference(Bean)&#123;&#125;); json字符串转Map1Map&lt;Sintrg,Objext&gt; map = JsonUtil.getMapFromJson(Bean); json字符串转List&lt;Map&lt;Sintrg,Objext&gt;&gt;1List&lt;Map&lt;Sintrg,Objext&gt;&gt; listMap = fromJson(Stinrg,List.class,Map.class);]]></content>
      <categories>
        <category>json</category>
      </categories>
      <tags>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo bulid]]></title>
    <url>%2F2019%2F08%2F26%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: baiduMore info: Deployment]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo rule</tag>
      </tags>
  </entry>
</search>
